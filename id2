# a = 'Hello Python'
# print(a.count('o'))#해당 분자가 몇개 존재하는지를 반환
# print(a.find('l'))# l이라는 문자가 처음 나오는 인덱스 번호 반환 단, 없는 문자응 찾을 경우 -1 반환
# print(a.index('l'))# l이라는 문자가 처음 나오는 인덱스 번호 반환 단, 없는 문자를 찾는 경우 에러 발생
# print(a.replace('py','my'))# old문자를 new문자로 바꾸어준다.
# print(a.split())#괄호 안에 있는 문자를 기준으로 문자열을 나누어준다.단 괄호안에 아공무것도 쓰지 않을 경우 백을 기준으로 나누어준다.
# print(a.upper())#소문자를 대문자로
# print(a.lower())# 대문자를 소문자로
# print(','.join(a)) #인덱스 번호 사이사이에 해당 문자를 집어넣어준다.
# print(a.capitalize())#0번째 문자가 대문자로 변경된다.
# print(a.startswith('el')) #해당 문자로 시작하는지를 물어본다. True/False
# print(a.endswith('ton')) # 해당 문자로 끝나는지를 물어본다. True/ False
# print(a.is~)# is로 시작하는 함수들은 물어보는 함수 = True/ False를 반환
#a.isalnum() = a라는 문자가 알파벳 또는 숫자인지를 물어본다.
# a = '123'
# print(a.isalpha()) # a라는 문자가 알파벳인지를 물어본다.
# print(a.isdigit()) # a라는 문자가 숫자로 이루어져 있는지 물어본다.
# print(a.isalnum()) 위에 두개 다 포함
# ========================================================
# 신규 아이디 추천 문제
# a = input()
# def solution(new_id):
#     new_id = new_id.lower()
#     for i in new_id:
#         if i.isalnum() or i in ['-','_','.']:
#             new_id += i
#         elif i in ["-","_","."]:
#             new_id += i
#         else:
#             pass
#     while ".." in new_id:
#         new_id=new_id.replace('..','.')
#     new_id = new_id.strip(".")
#     if new_id == "":
#         new_id = "a"
#     if len(new_id) >= 16:
#         new_id = new_id[:15]
#         if new_id[-1] == '.':
#             new_id = new_id[-1]
#     while len(new_id) < 3:
#         new_id += new_id[-1]
#
#     return new_id
# -----------------------------------------------
# 신고 받기 결과 문제
# def solution(id_list, report, k):
#     answer = []
#     report = list(set(report))
#
#     report_user = {}
#     for string in report:
#         user, target = string.split()
#         if target not in report_user.keys():
#             report_user[target] = [user]
#         else:
#             report_user[target].append(user)
#     print(report_user)
#     result = [0] * len(id_list)
#     print(result)
#     for target in id_list:
#         if target in report_user.keys() and len(report_user[target]) >= k:
#             for user in report_user[target]:
#                 print(user)
#                 result[id_list.index(user)] += 1
#     return result
#
#
#
# id_list = ["muzi", "frodo", "apeach", "neo"]
# report = ["muzi frodo","apeach frodo","frodo neo","muzi neo","apeach muzi"]
# k = 2
# print(solution(id_list,report,k))
# ---------------------------------------------------------------------------
